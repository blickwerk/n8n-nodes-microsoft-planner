{
  "permissions": {
    "allow": [
      "Bash(npm run build:*)",
      "Bash(npm link)",
      "Bash(npm whoami:*)",
      "Bash(npm view:*)",
      "Bash(npm publish:*)",
      "Bash(npm version:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push)",
      "Bash(cat:*)",
      "Bash(node update_resourcelocator.js:*)",
      "Bash(node update_getall.js:*)",
      "Bash(node -c:*)",
      "Bash(node -e \"\nconst fs = require(''fs'');\nconst content = fs.readFileSync(''c:/Users/LucaG/Documents/Webseiten/n8n-nodes-microsoft-planner/nodes/MicrosoftPlanner/MicrosoftPlanner.node.ts'', ''utf8'');\nconst lines = content.split(''\\n'');\n\n// Find and replace lines 500-512 (references building logic)\nlet newLines = [];\nfor (let i = 0; i < lines.length; i++) {\n\tif (i === 499) { // line 500 (0-indexed)\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t// Build reference object'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\tconst fileType = additionalFields.fileType as string || \\''Other\\'';'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\tconst previewPriority = additionalFields.previewPriority as string || \\''900\\'';'');\n\t\tnewLines.push('''');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t// Get existing references or create empty object'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\tconst existingReferences = details.references || {};'');\n\t\tnewLines.push('''');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t// Add new reference'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\tconst references: IDataObject = {'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t\\t[fileUrl]: {'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t\\t\\t\\''@odata.type\\'': \\''#microsoft.graph.plannerExternalReference\\'','');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t\\t\\talias: fileName,'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t\\t\\ttype: fileType,'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t\\t\\tpreviewPriority: previewPriority,'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t\\t},'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t};'');\n\t\tnewLines.push('''');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t// Merge with existing references (preserve existing ones)'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\tfor (const url in existingReferences) {'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t\\tif (!references[url]) {'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t\\t\\treferences[url] = existingReferences[url];'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t\\t}'');\n\t\tnewLines.push(''\\t\\t\\t\\t\\t\\t}'');\n\t\ti += 12; // skip original lines 500-512\n\t} else {\n\t\tnewLines.push(lines[i]);\n\t}\n}\n\nfs.writeFileSync(''c:/Users/LucaG/Documents/Webseiten/n8n-nodes-microsoft-planner/nodes/MicrosoftPlanner/MicrosoftPlanner.node.ts'', newLines.join(''\\n''), ''utf8'');\nconsole.log(''File updated successfully'');\n\")",
      "Bash(node:*)"
    ],
    "deny": [],
    "ask": []
  }
}
